# This is a basic workflow to help you get started with Actions

name: TestAndPublish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout codes
        uses: actions/checkout@v3

      # - name: Cache dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-npm-cache-

      # # 安装依赖 npm
      # - name: Install dependencies
      #   # 如果没有命中缓存才执行 npm install
      #   if: steps.cache-deps.outputs.cache-hit != 'true'
      #   run: npm install

      # - name: test
      #   run: |
      #     echo ${{ secrets.ACCESS_TOKEN }}

      # # Runs a single command using the runners shell
      # - name: build storyBook
      #   run: npm run build-storybook

      # Runs a set of commands using the runners shell
      - name: Deploy to GitHub Pages
        env:
          # Github 仓库
          GITHUB_REPO: github.com/ydm1475/ydm1475.github.io.git
        run: |
          cd ./storybook-static && git add .
          git config user.name "ydm1475"
          git config user.email "18848952893@163.com"
          git commit -m 'deploy'
          echo token:${{secrets.DEPLOY_TOKEN}}
          echo secrets:${{secrets}}
          echo "https://${{secrets.DEPLOY_TOKEN}}@$GITHUB_REPO"
          git push --force --quiet "https://${{secrets.DEPLOY_TOKEN}}@$GITHUB_REPO"
